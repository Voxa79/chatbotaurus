events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=audio_api:10m rate=10r/s;
    
    upstream whisper_backend {
        server whisper-turbo:9000;
    }

    upstream piper_backend {
        server piper-tts:10200;
    }

    server {
        listen 80;
        server_name localhost;

        # Rate limiting
        limit_req zone=audio_api burst=20 nodelay;

        # STT Endpoint - Speech to Text
        location /v1/audio/transcriptions {
            proxy_pass http://whisper_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # File upload settings
            client_max_body_size 50M;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }

        # TTS Endpoint - Text to Speech
        location /v1/audio/speech {
            proxy_pass http://piper_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_read_timeout 120s;
            proxy_connect_timeout 30s;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "Audio Gateway OK\n";
            add_header Content-Type text/plain;
        }

        # API documentation endpoint
        location /docs {
            return 200 '{
                "service": "Audio Gateway",
                "version": "1.0.0",
                "endpoints": {
                    "POST /v1/audio/transcriptions": "Speech to Text (Whisper)",
                    "POST /v1/audio/speech": "Text to Speech (Piper)",
                    "GET /health": "Health check"
                },
                "supported_formats": {
                    "input": ["mp3", "mp4", "mpeg", "mpga", "m4a", "wav", "webm"],
                    "output": ["wav", "mp3"]
                }
            }';
            add_header Content-Type application/json;
        }

        # Default route
        location / {
            return 302 /docs;
        }
    }
}